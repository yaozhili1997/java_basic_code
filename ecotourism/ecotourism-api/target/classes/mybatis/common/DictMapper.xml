<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ecotourism.api.common.dao.DictDao">

	<select id="get" resultType="com.ecotourism.api.common.domain.DictDO">
		select
		`id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag`
		from sys_dict where id = #{value}
	</select>

	<select id="list" resultType="com.ecotourism.api.common.domain.DictDO">
		select
		a.id,`name`,`value`,b.description type,a.description,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag`
		from sys_dict a
		left join sys_dict_type b ON
		a.type = b.type
		<where>
			<if test="companyNo != null and companyNo != ''"> and company_no = #{companyNo} </if>
			<if test="type != null and type != ''"> and a.type = #{type} </if>
			<if test="value != null and value != ''"> and a.value = #{value} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by a.id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from sys_dict a
		left join sys_dict_type b ON
		a.type = b.type
		<where>
			company_no = #{companyNo}
			<if test="type != null and type != ''"> and a.type = #{type} </if>
		</where>
	</select>

	<select id="countAll" resultType="int">
		select count(*) from sys_dict where type = #{type}
	</select>

	<insert id="save" parameterType="com.ecotourism.api.common.domain.DictDO"
		useGeneratedKeys="true" keyProperty="id">
		insert into sys_dict
		(
		`name`,
		`value`,
		`type`,
		`description`,
		`sort`,
		`parent_id`,
		`create_by`,
		`create_date`,
		`update_by`,
		`update_date`,
		`remarks`,
		`del_flag`,
		`company_no`
		)
		values
		(
		#{name},
		#{value},
		#{type},
		#{description},
		#{sort},
		#{parentId},
		#{createBy},
		#{createDate},
		#{updateBy},
		#{updateDate},
		#{remarks},
		#{delFlag},
		#{companyNo}
		)
	</insert>

	<update id="update" parameterType="com.ecotourism.api.common.domain.DictDO">
		update sys_dict
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="value != null">`value` = #{value}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="description != null">`description` = #{description}, </if>
			<if test="sort != null">`sort` = #{sort}, </if>
			<if test="parentId != null">`parent_id` = #{parentId}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateDate != null">`update_date` = #{updateDate}, </if>
			<if test="remarks != null">`remarks` = #{remarks}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
		<if test="companyNo != null and companyNo != ''"> and company_no = #{companyNo} </if>
	</update>

	<delete id="remove">
		delete from sys_dict where id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from sys_dict where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

	<select id="listType" resultType="com.ecotourism.api.common.domain.DictDO">
		select distinct `type` , description from sys_dict
	</select>
	<select id="findlistCache" resultType="com.ecotourism.api.common.domain.DictDO">
		select distinct CONCAT(type,company_no,value) as typeKey,name from sys_dict
	</select>

</mapper>