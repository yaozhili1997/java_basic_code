<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ecotourism.manage.fin.dao.FinancialManagementDao">

	<select id="get" resultType="com.ecotourism.manage.fin.domain.FinancialManagementDO">
		select `order_id`,`customer_name`,`customer_phone`,`customer_user_id`,`order_no`,`electronic_ticket`,`product_no`,`product_name`,`order_quantity`,`pay_price`,`total_amount`,`pay_type`,`pay_status`,`order_status`,`refund_status`,`order_distributor`,`purchase_time`,`consumption_time`,`play_time`,`message_status`,`whether_issued`,`check_equipment_no`,`spot_no`,`ticket_type`,`ticket_no`,`check_time`,`piaogo_order_no`,`order_voucherno`,`whether_send_notice`,`self_machine_no`,`whether_send_refund_notice`,`whether_send_check_tolocal`,`refund_time`,`is_transit`,`transit_time`,`device_no`,`device_no_two`,`transit_time_two`,`check_in_time`,`check_in_operator`,`push_user_no`,`company_no`,`bz`,`distribution_user`,`ip` from order_spot where order_id = #{value}
	</select>

	<select id="list" resultType="com.ecotourism.manage.fin.domain.FinancialManagementDO">
		select `order_id`,`customer_name`,`customer_phone`,`customer_user_id`,`order_no`
		,`electronic_ticket`,`product_no`,`product_name`,`order_quantity`,`pay_price`
		,`total_amount`,f.name pay_type,b.name pay_status ,c.name order_status
		,d.name refund_status,`order_distributor`,`purchase_time`,`consumption_time`
		,`play_time`,`message_status`,`whether_issued`,`check_equipment_no`,`spot_no`
		,e.name ticket_type,`ticket_no`,`check_time`,`piaogo_order_no`,`order_voucherno`
		,`whether_send_notice`,`self_machine_no`,`whether_send_refund_notice`,`whether_send_check_tolocal`
		,`refund_time`,`is_transit`,`transit_time`,`device_no`,`device_no_two`,`transit_time_two`
		,`check_in_time`,`check_in_operator`,`push_user_no`,`bz`,`distribution_user`,`ip` from order_spot a
		left join sys_dict b ON
		b.value = a.pay_status
		and b.company_no = a.company_no
		left join sys_dict c ON
		c.value = a.order_status
		and c.company_no = a.company_no
		left join sys_dict d ON
		d.value = a.refund_status
		and d.company_no = a.company_no
		left join sys_dict e ON
		e.value = a.ticket_type
		and e.company_no = a.company_no
		left join sys_dict f ON
		f.value = a.pay_type
		and f.company_no = a.company_no
		<include refid="sqlWhere"></include>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by order_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from order_spot a
		left join sys_dict b ON
		b.value = a.pay_status
		and b.company_no = a.company_no
		left join sys_dict c ON
		c.value = a.order_status
		and c.company_no = a.company_no
		left join sys_dict d ON
		d.value = a.refund_status
		and d.company_no = a.company_no
		left join sys_dict e ON
		e.value = a.ticket_type
		and e.company_no = a.company_no
		<include refid="sqlWhere"></include>
	</select>
	<select id="findTotalCount" resultType="com.ecotourism.manage.common.utils.PageTotal">
		select sum(a.order_quantity) as totalNum,sum(a.total_amount) as totalAmount from order_spot a
		left join sys_dict b ON
		b.value = a.pay_status
		and b.company_no = a.company_no
		left join sys_dict c ON
		c.value = a.order_status
		and c.company_no = a.company_no
		left join sys_dict d ON
		d.value = a.refund_status
		and d.company_no = a.company_no
		left join sys_dict e ON
		e.value = a.ticket_type
		and e.company_no = a.company_no
		<include refid="sqlWhere"></include>
	</select>
	<sql id="sqlWhere">
		<where>
			a.company_no = #{companyNo}
			<if test="searchName != null and searchName != ''">
				and (
				customer_name LIKE
				CONCAT(CONCAT('', #{searchName}),'%')
				or
				customer_phone
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				customer_user_id
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				order_no
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				electronic_ticket
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				product_name
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				)
			</if>
			<if test="productNoList != null and productNoList.length != 0 ">
				and product_no in
				<foreach collection="productNoList" item="item" index="index" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="payStatus != null and payStatus != ''"> and a.pay_status = #{payStatus} </if>
			<if test="orderStatus != null and orderStatus != ''"> and a.order_status = #{orderStatus} </if>
			<if test="refundStatus != null and refundStatus != ''"> and a.refund_status = #{refundStatus} </if>
			<if test="orderDistributor != null and orderDistributor != ''"> and a.order_distributor = #{orderDistributor} </if>
			<if test="spotNo != null and spotNo != ''"> and a.spot_no = #{spotNo} </if>
			<if test="ticketType != null and ticketType != ''"> and a.ticket_type = #{ticketType} </if>
			<if test="ticketNo != null and ticketNo != ''"> and a.ticket_no = #{ticketNo} </if>
			<if test="timeType != null and timeType != ''">
				<if test="timeType == 'sell'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.purchase_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.purchase_time <= #{endTime}]]>   </if>
				</if>
				<if test="timeType == 'check'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.check_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.check_time <= #{endTime}]]>   </if>
				</if>
				<if test="timeType == 'refund'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.refund_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.refund_time <= #{endTime}]]>   </if>
				</if>
				<if test="timeType == 'play'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.play_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.play_time <= #{endTime}]]>   </if>
				</if>
			</if>
		</where>
	</sql>

	<select id="settlement" resultType="com.ecotourism.manage.fin.domain.FinancialSettlementDO">
		SELECT
		order_distributor,
		spot_no,
		ifnull(SUM(a.order_quantity), 0) order_quantity,
		(
		ifnull(SUM(total_amount), 0) - ifnull(sum(b.refund_amount), 0)
		) total_amount,
		ifnull(sum(b.refund_amount), 0) refund_amount,
		ifnull(SUM(total_amount), 0) receivable_amount,
		ifnull(SUM(b.order_quantity), 0) refund_num,
		count(*) total_count
		FROM
		order_spot a
		LEFT JOIN order_refund_ticket b ON b.electronic_ticket = a.electronic_ticket
		<include refid="sqlSettlementWhere"></include>
		GROUP BY
		order_distributor,
		spot_no;
	</select>

	<update id="update" parameterType="com.ecotourism.manage.fin.domain.FinancialManagementDO">
		update order_spot a
		<set>
			<if test="whetherSettlement != null">`whether_settlement` = #{whetherSettlement}, </if>
			<if test="settlementNo != null">`settlement_no` = #{settlementNo} </if>
		</set>
		<include refid="sqlSettlementWhere"></include>
	</update>

	<sql id="sqlSettlementWhere">
		<where>
			a.company_no = #{companyNo}
			AND settlement_no IS NULL
			<if test="searchName != null and searchName != ''">
				and (
				customer_name LIKE
				CONCAT(CONCAT('', #{searchName}),'%')
				or
				customer_phone
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				customer_user_id
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				order_no
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				electronic_ticket
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				or
				product_name
				LIKE CONCAT(CONCAT('', #{searchName}),'%')
				)
			</if>
			<if test="productNo != null and productNo != ''"> and a.product_no = #{productNo} </if>
			<if test="payStatus != null and payStatus != ''"> and a.pay_status = #{payStatus} </if>
			<if test="orderStatus != null and orderStatus != ''"> and a.order_status = #{orderStatus} </if>
			<if test="refundStatus != null and refundStatus != ''"> and a.refund_status = #{refundStatus} </if>
			<if test="orderDistributor != null and orderDistributor != ''"> and a.order_distributor = #{orderDistributor} </if>
			<if test="spotNo != null and spotNo != ''"> and a.spot_no = #{spotNo} </if>
			<if test="ticketType != null and ticketType != ''"> and a.ticket_type = #{ticketType} </if>
			<if test="ticketNo != null and ticketNo != ''"> and a.ticket_no = #{ticketNo} </if>
			<if test="timeType != null and timeType != ''">
				<if test="timeType == 'sell'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.purchase_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.purchase_time <= #{endTime}]]>   </if>
				</if>
				<if test="timeType == 'check'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.check_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.check_time <= #{endTime}]]>   </if>
				</if>
				<if test="timeType == 'refund'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.refund_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.refund_time <= #{endTime}]]>   </if>
				</if>
				<if test="timeType == 'play'">
					<if test="startTime != null and startTime != ''"><![CDATA[ and a.play_time >= #{startTime}]]>   </if>
					<if test="endTime != null and endTime != ''"> <![CDATA[ and a.play_time <= #{endTime}]]>   </if>
				</if>
			</if>
		</where>
	</sql>
</mapper>